import { z } from "zod";

import { waitingListSchema } from "./waitingListSchema";
import { timeSpanSchema } from "./timeSpanSchema";
import { paymentHistorySchema } from "./paymentHistorySchema";


      /**
       * @description Success
       */
export const postApiWaitinglistMutationResponseSchema = z.lazy(() => waitingListSchema).schema;
export const postApiWaitinglistQueryParamsSchema = z.object({"Id": z.number().optional(),"status": z.string().optional(),"Notes": z.string().optional(),"testNotes": z.string().optional(),"PaymentDate": z.string().datetime().optional(),"PaidValue": z.number().optional(),"RemainingValue": z.number().optional(),"PaidStatus": z.string().optional(),"PaidType": z.string().optional(),"trainee.Id": z.number().optional(),"trainee.FullName": z.string().optional(),"trainee.Mobile": z.string().optional(),"trainee.Birthdate": z.string().optional(),"trainee.Address": z.string().optional(),"trainee.Email": z.string().optional(),"trainee.StartTimeForTest": z.lazy(() => timeSpanSchema).schema.optional(),"trainee.IsDeleted": z.boolean().optional(),"trainee.PreferredDayForTest": z.string().optional(),"trainee.PreferredSlotId": z.number().optional(),"trainee.PreferredSlot.Id": z.number().optional(),"trainee.PreferredSlot.StartTime": z.lazy(() => timeSpanSchema).schema.optional(),"trainee.PreferredSlot.EndTime": z.lazy(() => timeSpanSchema).schema.optional(),"trainee.PreferredSlot.Day1": z.string().optional(),"trainee.PreferredSlot.Day2": z.string().optional(),"trainee.SecondPreferredSlotId": z.number().optional(),"trainee.SecondPreferredSlot.Id": z.number().optional(),"trainee.SecondPreferredSlot.StartTime": z.lazy(() => timeSpanSchema).schema.optional(),"trainee.SecondPreferredSlot.EndTime": z.lazy(() => timeSpanSchema).schema.optional(),"trainee.SecondPreferredSlot.Day1": z.string().optional(),"trainee.SecondPreferredSlot.Day2": z.string().optional(),"trainee.BranchId": z.number().optional(),"trainee.Branch.Id": z.number().optional(),"trainee.Branch.Name": z.string().optional(),"trainee.AttendType": z.string().optional(),"trainee.LevelId": z.number().optional(),"trainee.Status": z.string().optional(),"trainee.CurrentStatus": z.string().optional(),"trainee.Notes": z.string().optional(),"trainee.Education": z.string().optional(),"trainee.Job": z.string().optional(),"trainee.testDate": z.string().datetime().optional(),"trainee.Country.Id": z.number().optional(),"trainee.Country.name": z.string().optional(),"trainee.Country.iso3": z.string().optional(),"trainee.Country.iso2": z.string().optional(),"trainee.Country.phone_code": z.string().optional(),"trainee.Country.currency": z.string().optional(),"trainee.CountryId": z.number().optional(),"trainee.City.Id": z.number().optional(),"trainee.City.name": z.string().optional(),"trainee.City.CountryId": z.number().optional(),"trainee.City.Country.Id": z.number().optional(),"trainee.City.Country.name": z.string().optional(),"trainee.City.Country.iso3": z.string().optional(),"trainee.City.Country.iso2": z.string().optional(),"trainee.City.Country.phone_code": z.string().optional(),"trainee.City.Country.currency": z.string().optional(),"trainee.CityId": z.number().optional(),"trainee.typeOfGender": z.string().optional(),"trainee.Level.Id": z.number().optional(),"trainee.Level.Name": z.string().optional(),"trainee.AssignedTrainerId": z.number().optional(),"trainee.AssignedTrainer.Id": z.number().optional(),"trainee.AssignedTrainer.BranchId": z.number().optional(),"trainee.AssignedTrainer.Branch.Id": z.number().optional(),"trainee.AssignedTrainer.Branch.Name": z.string().optional(),"trainee.AssignedTrainer.AspNetUserId": z.string().optional(),"trainee.AssignedTrainer.AspNetUser.BranchId": z.number().optional(),"trainee.AssignedTrainer.AspNetUser.Branch.Id": z.number().optional(),"trainee.AssignedTrainer.AspNetUser.Branch.Name": z.string().optional(),"trainee.AssignedTrainer.AspNetUser.image": z.string().optional(),"trainee.AssignedTrainer.AspNetUser.Id": z.string().optional(),"trainee.AssignedTrainer.AspNetUser.UserName": z.string().optional(),"trainee.AssignedTrainer.AspNetUser.NormalizedUserName": z.string().optional(),"trainee.AssignedTrainer.AspNetUser.Email": z.string().optional(),"trainee.AssignedTrainer.AspNetUser.NormalizedEmail": z.string().optional(),"trainee.AssignedTrainer.AspNetUser.EmailConfirmed": z.boolean().optional(),"trainee.AssignedTrainer.AspNetUser.PasswordHash": z.string().optional(),"trainee.AssignedTrainer.AspNetUser.SecurityStamp": z.string().optional(),"trainee.AssignedTrainer.AspNetUser.ConcurrencyStamp": z.string().optional(),"trainee.AssignedTrainer.AspNetUser.PhoneNumber": z.string().optional(),"trainee.AssignedTrainer.AspNetUser.PhoneNumberConfirmed": z.boolean().optional(),"trainee.AssignedTrainer.AspNetUser.TwoFactorEnabled": z.boolean().optional(),"trainee.AssignedTrainer.AspNetUser.LockoutEnd": z.string().datetime().optional(),"trainee.AssignedTrainer.AspNetUser.LockoutEnabled": z.boolean().optional(),"trainee.AssignedTrainer.AspNetUser.AccessFailedCount": z.number().optional(),"trainee.FollowUpUserId": z.string().optional(),"trainee.FollowUpUser.BranchId": z.number().optional(),"trainee.FollowUpUser.Branch.Id": z.number().optional(),"trainee.FollowUpUser.Branch.Name": z.string().optional(),"trainee.FollowUpUser.image": z.string().optional(),"trainee.FollowUpUser.Id": z.string().optional(),"trainee.FollowUpUser.UserName": z.string().optional(),"trainee.FollowUpUser.NormalizedUserName": z.string().optional(),"trainee.FollowUpUser.Email": z.string().optional(),"trainee.FollowUpUser.NormalizedEmail": z.string().optional(),"trainee.FollowUpUser.EmailConfirmed": z.boolean().optional(),"trainee.FollowUpUser.PasswordHash": z.string().optional(),"trainee.FollowUpUser.SecurityStamp": z.string().optional(),"trainee.FollowUpUser.ConcurrencyStamp": z.string().optional(),"trainee.FollowUpUser.PhoneNumber": z.string().optional(),"trainee.FollowUpUser.PhoneNumberConfirmed": z.boolean().optional(),"trainee.FollowUpUser.TwoFactorEnabled": z.boolean().optional(),"trainee.FollowUpUser.LockoutEnd": z.string().datetime().optional(),"trainee.FollowUpUser.LockoutEnabled": z.boolean().optional(),"trainee.FollowUpUser.AccessFailedCount": z.number().optional(),"trainee.PaymentHistory": z.array(z.lazy(() => paymentHistorySchema).schema).optional(),"traineeId": z.number().optional(),"isDeleted": z.boolean().optional()});